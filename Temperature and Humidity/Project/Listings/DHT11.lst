C51 COMPILER V9.54   DHT11                                                                 07/16/2022 18:12:11 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE DHT11
OBJECT MODULE PLACED IN ..\Obj\DHT11.obj
COMPILER INVOKED BY: D:\keil 5 - C51\C51\BIN\C51.EXE ..\Hardware\DHT11\DHT11.c OPTIMIZE(8,SPEED) BROWSE INCDIR(..\FWLib;
                    -..\User;..\System\MyTime;..\Hardware\LED;..\Hardware\SGM;..\Hardware\DHT11) DEBUG OBJECTEXTEND PRINT(.\Listings\DHT11.ls
                    -t) OBJECT(..\Obj\DHT11.obj)

line level    source

   1          /**
   2           * @file DHT11.c
   3           * @brief 温湿度传感器模块
   4           */
   5          #include "DHT11.h"
   6          #include "config.h"
   7          #include "delay.h"
   8          #include "GPIO.h"
   9          
  10          #include "led.h"
  11          
  12          DHT11_DataPack_Typedef DHT11_Data;
  13          
  14          // 读DHT11错误标志
  15          // 0->无错误    (No_Error)
  16          // 1->超时              (OverTime_Error)
  17          // 2->传输错误  (Transmission_Error)
  18          // 3->数据过旧  (DataOld_Error)
  19          Read_DHT11_Error_Flag Read_DHT11_Error = 0;
  20          
  21          void DHT11_Init(void)
  22          {
  23   1              GPIO_InitTypeDef GPIO_InitStructure;
  24   1              
  25   1              delay_ms(1000);  // 等待1s以越过不稳定状态
  26   1              
  27   1              GPIO_InitStructure.Pin = DHT11_Data_Pin;
  28   1              GPIO_InitStructure.Mode = GPIO_OUT_OD;  // 开漏输出，便于后续的读取DHT11
  29   1              GPIO_Inilize(DHT11_Port, &GPIO_InitStructure);
  30   1              
  31   1              DHT11_Data_Clr();
  32   1      }
  33          
  34          // 主机发送开始信号
  35          static void Start_DHT11(void)
  36          {
  37   1              DHT11_Data_Clr();
  38   1              DHT11_Data_Set();
  39   1              delay_ms(18);           // 拉低总线至少18ms，保证DHT11检测到起始信号
  40   1              DHT11_Data_Clr();
  41   1      }
  42          
  43          // 读取DHT11发送的数据的一个字节
  44          // 不知道为什么超时直接退出
  45          // 可能是因为后面的数据都是0吧
  46          static u8 Read_DHT11_Part(void)
  47          {
  48   1              u8 i;
  49   1              u8 temp;
  50   1              u8 Overtime_Flag;  // 超时标记，避免因DHT11而卡死
  51   1              u8 Read_Byte = 0X00;  // 读取的数据
  52   1              
  53   1              for(i=0; i<8; i++)
C51 COMPILER V9.54   DHT11                                                                 07/16/2022 18:12:11 PAGE 2   

  54   1              {
  55   2                      Overtime_Flag = 0;
  56   2                      while(!DHT11_Data_Pin && ++Overtime_Flag);  // 1bit开始
  57   2                      if(Overtime_Flag == 0) break;  // 超时退出
  58   2                      
  59   2                      // 延时30us
  60   2                      Delay10us();
  61   2                      Delay10us();
  62   2                      Delay10us();
  63   2                      if(DHT11_Data_Pin)
  64   2                      {
  65   3                              temp = 1;
  66   3                              Overtime_Flag = 0;
  67   3                              while(DHT11_Data_Pin && ++Overtime_Flag);  // 直到高电平结束
  68   3                      }
  69   2                      else temp = 0;
  70   2                      if(Overtime_Flag == 0) break;  // 超时退出
  71   2                      Read_Byte <<= 1;
  72   2                      Read_Byte |= temp;
  73   2              }
  74   1              return Read_Byte;
  75   1      }
  76          
  77          // 读取一次DHT11
  78          DHT11_DataPack_Typedef Read_DHT11(void)
  79          {
  80   1              u8 i;
  81   1              u8 Check_Byte;
  82   1              u8 Overtime_Flag;  // 超时标记，避免因DHT11而卡死
  83   1              DHT11_DataPack_Typedef DHT11_Data = {0, 0, 0, 0, 0};
  84   1              u8 *pByte = (u8*)&DHT11_Data;
  85   1              
  86   1              Read_DHT11_Error = No_Error;  // 重置读DHT11错误标志
  87   1              
  88   1              Start_DHT11();
  89   1              
  90   1              // 延时20~40us
  91   1              Delay10us();
  92   1              Delay10us();
  93   1              Delay10us();
  94   1              Delay10us();
  95   1              // 读取DHT11的响应信号
  96   1              DHT11_Data_Read_Bef();  // 主机设为输入
  97   1              if(!DHT11_Data_Pin)  // DHT11响应
  98   1              {
  99   2                      Overtime_Flag = 0;
 100   2                      while(!DHT11_Data_Pin && ++Overtime_Flag);  // 判断DHT11的响应信号的低电平是否结束
 101   2                      if(Overtime_Flag == 0)  // 超时
 102   2                              Read_DHT11_Error = OverTime_Error;
 103   2                      Overtime_Flag = 0;
 104   2                      while(DHT11_Data_Pin && ++Overtime_Flag);  // 判断DHT11的响应信号的高电平是否结束
 105   2                      if(Overtime_Flag == 0)  // 超时
 106   2                              Read_DHT11_Error = OverTime_Error;
 107   2                      
 108   2                      // 开始读取信息
 109   2                      for(i=0; i<8; i++)
 110   2                      {
 111   3                              *pByte = Read_DHT11_Part();
 112   3                              pByte++;
 113   3                      }
 114   2              }
 115   1              
C51 COMPILER V9.54   DHT11                                                                 07/16/2022 18:12:11 PAGE 3   

 116   1              // 判断是否出现传输错误
 117   1              Check_Byte = DHT11_Data.Hum_Data_Int + DHT11_Data.Hum_Data_Dec +\
 118   1                                      DHT11_Data.Tem_Data_Int + DHT11_Data.Tem_Data_Dec;
 119   1              if(DHT11_Data.Check_Byte!=Check_Byte)  // 传输错误
 120   1                      Read_DHT11_Error = Transmission_Error;
 121   1              
 122   1              return DHT11_Data;
 123   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    262    ----
   CONSTANT SIZE    =      5    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      6      15
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
